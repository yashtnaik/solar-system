name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  # MONGO_URI: 'mongo+srv://supercluster.d83jj.mongodb.net/superData'
  # MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  # MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  MONGO_URI: 'mongodb+srv://${{ vars.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@supercluster.d83jj.mongodb.net/superData?retryWrites=true&w=majority'
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: 'solarsystem'

jobs:
  unit-testing:
    name: Unit testing
    continue-on-error: true
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest] #macos-latest
        exclude:
          - os: macos-latest
            node-version: 18
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: caching npm dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/lockfiles') }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results_${{ matrix.node-version }}_${{ matrix.os }}
          path: ./test-results_${{ matrix.node-version }}_${{ matrix.os }}.xml

  code-coverage:
    continue-on-error: true
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest] # macos-latest
        exclude:
          - os: macos-latest
            node-version: 18
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: caching npm dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/lockfiles') }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Generate code coverage report
        run: npm run coverage

      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage_${{ matrix.node-version }}_${{ matrix.os }}
          path: ./coverage
          retention-days: 5

  docker-containerization:
    permissions:
      packages: write
    needs: [code-coverage, unit-testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-k8s:
    needs: [docker-containerization]
    uses: ./.github/workflows/re-usable-wf.yml
      # with:
      #  trigger: true
        #      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        #    secrets:
      #      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
