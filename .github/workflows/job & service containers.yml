name: solar-system

on: 
  push:
    branches:
      - feature/*
    paths:
      - .github/workflows/solar-system.yaml
      - .github/workflows/job & service containers.yml
  workflow_dispatch:

env:
    MONGO_URI: 'mongodb+srv://${{ vars.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@supercluster.d83jj.mongodb.net/superData?retryWrites=true&w=majority'
    IMAGE_TAG: ${{ github.sha }}
    IMAGE_NAME: 'solarsystem'

jobs:
  unit-testing:
    services:
      mongo:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
        environment:
          MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_URI: 'mongo://localhost:27017/superData'

    strategy:
      matrix:
        node-version: [14, 18]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nodejs ${{ matrix.node-version}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

  Coverage-testing:
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: generate code coverage
        run: npm run coverage

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: code_coverage
          path: coverage/
          retention-days: 5
